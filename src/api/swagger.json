{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ObjectId": {
				"type": "string",
				"description": "A class representation of the BSON ObjectId type."
			},
			"Accessibility": {
				"description": "Enum Accessibility represents a board's physical environment and reachability.",
				"enum": [
					"PUBLIC",
					"PRIVATE",
					"INACCESSIBLE"
				],
				"type": "string"
			},
			"Material": {
				"description": "Enum Material describes a board's surface material.",
				"enum": [
					"WOOD",
					"METAL",
					"PLASTIC",
					"GLASS",
					"OTHER"
				],
				"type": "string"
			},
			"Size": {
				"description": "Enum Size describes a boards's general physical size.",
				"enum": [
					"SMALL",
					"MEDIUM",
					"LARGE"
				],
				"type": "string"
			},
			"Type": {
				"description": "Enum Type represents a board's purpose.",
				"enum": [
					"OBITUARY",
					"POLITICS",
					"NOTICE",
					"PUBLIC",
					"OTHER"
				],
				"type": "string"
			},
			"Board": {
				"description": "Type Board represents a bulletin board.",
				"properties": {
					"_id": {
						"$ref": "#/components/schemas/ObjectId",
						"description": "Internal identifier for the board.",
						"example": "507c7f79bcf86cd7994f6c0e"
					},
					"latitude": {
						"type": "number",
						"format": "float",
						"description": "Latitude coordinate of the board. Has to be between `-90.0` and `90.0`.",
						"example": -45.7,
						"minimum": -90,
						"maximum": 90
					},
					"longitude": {
						"type": "number",
						"format": "float",
						"description": "Longitude coordinate of the board. Has to be between `-180.0` and `180.0`.",
						"example": -103.4,
						"minimum": -180,
						"maximum": 180
					},
					"accessibility": {
						"$ref": "#/components/schemas/Accessibility",
						"description": "Board accessibility."
					},
					"material": {
						"$ref": "#/components/schemas/Material",
						"description": "Board material."
					},
					"size": {
						"$ref": "#/components/schemas/Size",
						"description": "Board size."
					},
					"traffic": {
						"type": "integer",
						"format": "int32",
						"description": "Board traffic amount.",
						"minimum": 1,
						"maximum": 5
					},
					"type": {
						"$ref": "#/components/schemas/Type",
						"description": "Board type."
					},
					"created": {
						"type": "string",
						"format": "date-time",
						"description": "Board creation date."
					},
					"modified": {
						"type": "string",
						"format": "date-time",
						"description": "Board last modification date."
					}
				},
				"required": [
					"latitude",
					"longitude",
					"accessibility",
					"material",
					"size",
					"traffic",
					"type",
					"created",
					"modified"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Filter": {
				"description": "Type Filter represents a transient object used to query the API for boards.",
				"properties": {
					"accessibility": {
						"items": {
							"$ref": "#/components/schemas/Accessibility"
						},
						"type": "array",
						"description": "Filter the results' accessibility, if defined.",
						"example": [
							"PUBLIC",
							"PRIVATE"
						],
						"maxItems": 3
					},
					"material": {
						"items": {
							"$ref": "#/components/schemas/Material"
						},
						"type": "array",
						"description": "Filter the results' material, if defined.",
						"example": [
							"GLASS",
							"WOOD",
							"OTHER"
						],
						"maxItems": 5
					},
					"size": {
						"items": {
							"$ref": "#/components/schemas/Size"
						},
						"type": "array",
						"description": "Filter the results' size, if defined.",
						"example": [
							"SMALL",
							"LARGE"
						],
						"maxItems": 3
					},
					"traffic": {
						"items": {
							"type": "integer",
							"format": "int32"
						},
						"type": "array",
						"description": "Filter the results' traffic amount, if defined.",
						"example": [
							2,
							5
						],
						"minimum": 1,
						"maximum": 5
					},
					"type": {
						"items": {
							"$ref": "#/components/schemas/Type"
						},
						"type": "array",
						"description": "Filter the results' type, if defined.",
						"example": [
							"OBITUARY",
							"PUBLIC"
						],
						"maxItems": 5
					},
					"latitude": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array",
						"description": "Minimum and maximum latitudes for the results.",
						"example": [
							-45.7,
							23.2
						],
						"minItems": 2,
						"maxItems": 2,
						"minimum": -90,
						"maximum": 90
					},
					"longitude": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array",
						"description": "Minimum and maximum latitudes for the results.",
						"example": [
							-103.4,
							95.8
						],
						"minItems": 2,
						"maxItems": 2,
						"minimum": -180,
						"maximum": 180
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Numbers": {
				"properties": {
					"OBITUARY": {
						"type": "number",
						"format": "double"
					},
					"POLITICS": {
						"type": "number",
						"format": "double"
					},
					"NOTICE": {
						"type": "number",
						"format": "double"
					},
					"PUBLIC": {
						"type": "number",
						"format": "double"
					},
					"OTHER": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"description": "Type Numbers contains the total number of board registered for each\n{@link Type}."
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "bakeka-backend",
		"version": "0.0.1",
		"description": "The backend monolith for Bakeka",
		"license": {
			"name": "AGPL-3.0-or-later"
		},
		"contact": {
			"name": "Bakeka"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/boards": {
			"post": {
				"operationId": "FilterBoards",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Board"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves multiple board by using various filters. If any of the properties\nof the filter is `undefined`, it will not be applied to the results.",
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "- The filter to apply",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Filter",
								"description": "- The filter to apply"
							}
						}
					}
				}
			}
		},
		"/boards/{boardId}": {
			"get": {
				"operationId": "GetBoard",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Board"
								}
							}
						}
					}
				},
				"description": "Retrieves a single board by its internal ID.",
				"security": [],
				"parameters": [
					{
						"description": "- The board's identifier",
						"in": "path",
						"name": "boardId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "UpdateBoard",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Updated a single board by its internal ID.",
				"security": [],
				"parameters": [
					{
						"description": "- The board's identifier",
						"in": "path",
						"name": "boardId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "- The new board object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Board",
								"description": "- The new board object"
							}
						}
					}
				}
			}
		},
		"/boards/numbers": {
			"get": {
				"operationId": "GetNumbers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Numbers"
								}
							}
						}
					}
				},
				"description": "Returns the total number of board registered for each type (see enum Type).",
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/api/v1"
		}
	]
}